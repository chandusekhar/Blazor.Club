@page "/"
<div class="px-0">
    <div class="jumbotron">
        <div class="container">
            <h1>Blazor</h1>
            <p class="lead">使用 C# 来创建 Web 应用</p>
            <p>
                <a class="btn btn-white btn-lg btn-scale" href="https://docs.microsoft.com/aspnet/core/blazor/get-started" target="_blank" role="button">入门</a>
                <a class="btn btn-purple btn-lg btn-scale" href="https://docs.microsoft.com/aspnet/core/blazor" target="_blank" role="button">文档</a>
            </p>
            <p>支持 Windows, Linux, and macOS</p>
        </div>
    </div>
    <div class="swim pt-60 pb-60">
        <div class="container">
            <div class="row vertical-align-sm">
                <div class="col-xs-12 col-sm-6">
                    <img src="https://dotnet.microsoft.com/images/screenshot-blazor-sample.png?v=I8ehzNLqsOCsVxsF3R-AiNMUf8tsQUZcaO7bZ0JW_go" class="img-responsive img-responsive-center img-bordered">
                </div>
                <div class="col-md-4 col-sm-5 col-sm-push-1">
                    <h2>使用C#的交互式Web UI</h2>
                    <p>Blazor允许您使用C#而不是JavaScript构建交互式Web UI。 Blazor应用程序由使用C#，HTML和CSS实现的可重用Web UI组件组成。 客户端和服务器代码都是用C#编写的，允许您共享代码和库。</p>
                    <p>Blazor 是<a href="/apps/aspnet">ASP.NET</a>中的一个模块。ASP.NET是一个流行的Web开发框架，它通过用于构建Web应用程序的工具和库扩展了<a href="/learn/dotnet/what-is-dotnet">.NET开发人员平台</a> 。</p>
                </div>
            </div>
        </div>
    </div>
    <div class="swim swim-gray pt-60 pb-60">
    <div class="container">
        <div class="row vertical-align-sm">
            <div class="col-md-4 col-sm-5 col-md-pull-5 col-sm-pull-6">
                <h2>Run on WebAssembly or the server</h2>
                <p>Blazor can run your client-side C# code directly in the browser, using WebAssembly. Because it's real .NET running on WebAssembly, you can re-use code and libraries from server-side parts of your application.</p>
                <p>Alternatively, Blazor can run your client logic on the server. Client UI events are sent back to the server using SignalR - a real-time messaging framework. Once execution completes, the required UI changes are sent to the client and merged into the DOM<span data-toggle="tooltip" class="tooltip-info" tabindex="0" role="tooltip" title="" aria-label="The document object model (DOM) is a programming interface that represents all elements on an HTML page as nodes in a tree structure. Using the DOM, elements can be updated, added, and removed from the page." data-original-title="The document object model (DOM) is a programming interface that represents all elements on an HTML page as nodes in a tree structure. Using the DOM, elements can be updated, added, and removed from the page."><span aria-hidden="true" class="ms-Icon ms-Icon--Info"></span></span>.</p>
            </div>
            <div class="col-xs-12 col-sm-6 col-sm-push-6">
                <img src="https://dotnet.microsoft.com/images/illustrations/swimlane-browser-server.svg?v=tDBC89XE_R1c14G48L_EMIh_uqTZOp7tENK0LbANSt0" alt="" role="presentation" class="img-responsive img-responsive-center">
            </div>
        </div>
    </div>
</div>
</div>